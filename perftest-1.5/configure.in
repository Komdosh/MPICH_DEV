dnl Process this file with autoconf to produce a configure script.
AC_INIT([perftest],[1.5],[wgropp@illinois.edu],[perftest])
AC_CONFIG_SRCDIR(mpptest.c)
AC_PREREQ(2.59)   dnl needed for SHELL, added in 2.13
                  dnl Using the newer autoconf macros
AC_CONFIG_AUX_DIR(config)   dnl for tools needed for configure

if test -n "$ac_configure_args" ; then
    echo "Configuring perftest version $VERSION with $ac_configure_args"
else 
    echo "Configuring perftest version $VERSION"
fi
# Add the information on the system:
echo "Running on system: `uname -a`"

dnl AM_ INIT_AUTOMAKE(perftest,1.4b)
AM_INIT_AUTOMAKE

AM_CONFIG_HEADER(mpptestconf.h)

AC_SUBST(COPTIONS)
PAC_ARG_STRICT

AC_ARG_ENABLE(echo,
[--enable-echo    - Turn on echoing from within the configure script],
set -x)

AC_ARG_ENABLE(restrict,
[--enable-restrict - Check for C restrict keyword (or similar)],
use_restrict=$enableval,use_restrict="yes")

PAC_ARG_CACHING 

AC_ARG_ENABLE(fortran,
[--enable-fortran - Build with Fortran],
enable_fortran=$enableval,enable_fortran="yes")
dnl
dnl Add descriptions of the environment variables.  There's no 
dnl really good way to do this.  AC_ARG_VAR does document the variable,
dnl but it also AC_SUBST it and makes it precious

#
# Turn off the other languages (otherwise tested for in ARG_MPI_TYPES)
enable_cxx=no
enable_f90=no

# We need to check for any compiler first to make sure that the
# object and executable file extensions are correctly determined
saveCFLAGS=$CFLAGS
saveCC=$CC
AC_PROG_CC
# Misfeature in autoconf.  When using gcc, PROG_CC insists on setting 
# CFLAGS to -g -O2 if CFLAGS is not set.  This may be appropriate for
# many tools built with configure and gcc, but not always.  In particular,
# there seems to be no way to get gcc to use no extra flags if that is desired.
if test -z "$saveCFLAGS" -a -n "$CFLAGS" ; then
    # restore CFLAGS
    # Note: This may not be correct if PROG_CC decided to add other 
    # flags to CFLAGS to enforce some behavior (such as ANSI/ISO C),
    # But we haven't seen that in practice.  It would be better
    # if the CFLAGS were decomposed into flags-that-change-the-language
    # that the compiler accepts from optimizations
    CFLAGS=$saveCFLAGS
fi
CC=$saveCC
am__fastdepCXX_FALSE=#
am__fastdepCXX_TRUE=#

dnl Handle the case that we are configuring from within an MPICH build
dnl PAC_ARG_MPICH_BUILDING

dnl Include --with options for various MPI implementations
dnl The default is included to make makedist work; plus this IS part of
dnl the MPICH release.
PAC_ARG_MPI_TYPES(mpich)

dnl Checks for programs.
if test "$pac_lib_mpi_is_building" != "yes" ; then
    # Only check these if we aren't building the MPICH libraries
    PAC_PROG_CC
    if test "$enable_fortran" = "yes" ; then
        AC_PROG_F77
    fi
fi
AC_SUBST(FOPTIONS)
PAC_PROG_MAKE

# If we have perl, we can build the tool to extract data from the gnuplot 
# output
AC_PATH_PROG(PERL,perl)

# Look for graphics programs
AC_CHECK_PROGS(GRAPHICS_PGM,cit gnuplot,"none")

PAC_C_OPTIMIZATION

# Checks for libraries.
AC_SEARCH_LIBS(fabs, m)
PAC_LIB_MPI

MPIPSCW=no
if test "$pac_lib_mpi_is_building" = "no" ; then
   # Look for MPI_Put and MPI_Alloc_mem
   # shmalloc is needed for SGI
   AC_CHECK_FUNCS(MPI_Put MPI_Get)
   AC_CHECK_FUNC(MPI_Alloc_mem,found_alloc=1,found_alloc=0)
   if test "$found_alloc" != 1 -a "$ac_cv_func_MPI_Put" = "yes" ; then
       AC_SEARCH_LIBS(shmalloc,sma,AC_DEFINE(HAVE_SHMALLOC,1,[Define if shmalloc function is available]))
   fi
   found_init_thread=no
   AC_CHECK_FUNC(MPI_Init_thread,found_init_thread=yes)
   if test "$found_init_thread" = yes ; then
      AC_DEFINE(HAVE_MPI_INIT_THREAD,1,[Define if MPI_Init_thread available])
   fi
   # Check for the scalable RMA (SGI MPI as of 4/2007 did not include these)
   have_win_pscw=yes
   AC_CHECK_FUNCS(MPI_Win_post MPI_Win_start MPI_Win_complete MPI_Win_wait,,have_win_pscw=no)
   if test "$have_win_pscw" = yes ; then
       AC_DEFINE(HAVE_MPI_PSCW,1,[Define if MPI supports post/start/complete/wait RMA])
       MPIPSCW=yes       
   fi
   AC_SUBST(MPIPSCW)
   # Check for passive-target RMA
   have_passive_rma=yes
   AC_CHECK_FUNCS(MPI_Win_lock MPI_Win_unlock,,have_passive_rma=no)
   if test "$have_passive_rma" = yes ; then
       AC_DEFINE(HAVE_MPI_PASSIVERMA,1,[Define if MPI supports passive-target RMA])
   fi
fi
#
# Perform backup tests to try and find either MPIEXEC or MPIRUN.  
# runhalo is expecting mpiexec
if test -z "$MPIEXEC" ; then
   if test -n "$MPIRUN"  ; then
        AC_MSG_WARN([mpiexec was not found.  Using mpirun instead.])
        MPIEXEC=$MPIRUN
	if test -n "$MPIRUN_NP" ; then
	    MPIEXEC_N="$MPIRUN_NP"
        fi
    fi
fi

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(sys/time.h stdlib.h string.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_TIME
AC_STRUCT_TM
AC_C_CONST
if test $use_restrict = "yes" ; then
    AC_C_RESTRICT
else
    AC_DEFINE(restrict,,[Define to empty if restrict is not used])
fi
AC_MSG_CHECKING([for long long])
AC_TRY_COMPILE(,[long long i;],have_long_long="yes",have_long_long="no")
AC_MSG_RESULT($have_long_long)
if test $have_long_long = "yes" ; then
    AC_DEFINE(HAVE_LONG_LONG,1,[Define if long long type supported])
fi
dnl Checks for library functions.

if test "$pac_lib_mpi_is_building" = "yes" ; then
   # At the very end, make sure we substitute the correct commands
   CC="$MPICC"
   if test -n "$MPIF77" ; then
       # Only replace F77 if MPIF77 is defined
       F77="$MPIF77"
   fi
fi

dnl
dnl Automake generates bogus rules for rebuilding configure.  Fix them 
dnl up here
if test -x makeconfigure ; then
    AUTOCONF=./makeconfigure ; 
else
    AUTOCONF=true
fi
AUTOHEADER=true
if test -x makeconfigure ; then
    :
else
    AUTOMAKE=true
fi
ACLOCAL=true
dnl

dnl Some versions of configure substitute CFLAGS for you, others do not
AC_SUBST(CFLAGS)
#
# Summarize the MPI environment
echo "Compile MPI programs with $CC $DEFS $CFLAGS $COPTIONS $CPPFLAGS"
echo "Link MPI programs with $CC $CFLAGS $LDFLAGS"
echo "Run MPI programs with $MPIEXEC ${MPIEXEC_N}n"
AC_OUTPUT_COMMANDS([chmod a+x runhalo extractdata])
AC_OUTPUT(Makefile runhalo extractdata rundefs)
